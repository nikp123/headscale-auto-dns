# Domain pointing to the Headscale service
HEADSCALE_DOMAIN="https://headscale.example.com"
# Admin API key obtained from the Headscale console
# See: $ headscale api create
HEADSCALE_AUTH="verylongheadscaleapikeyobtainedfromtheheadscalecli"
# HTTP basic authentication (username and password) in order to authenticate with
# the internal Traefik API. You have to configure this on Traefik side as well.
# See: https://doc.traefik.io/traefik/operations/api/
TRAEFIK_USER="traefik"
TRAEFIK_PASS='raw_password_goes_here'
# The traefik domain specification must be done like this because
# the prefixes and the suffixes are attached to discovered Headscale nodes'
# domain names in order to make a full URL 
# (eg. `http://traefik.user.tailscale/traefik`)
TRAEFIK_DOMAIN_PREFIX="http://"
TRAEFIK_DOMAIN_SUFFIX="/traefik"
# List of users within the tailscale network that are the owners of the
# nodes that we want to scan for Traefik API services. Comma-separated list. 
# Leave empty if you don't want to filter nodes by the names of the users,
# this will make the program scan all nodes belonging to all users on the network.
HEADSCALE_ALLOWED_USERS="server"
# List of headscale node(s) to be filtered out. Comma-separated list.
# These node(s) will be removed from all of the nodes found after selecting
# the allowed users. Leave this option empty if you don't want any nodes removed
# from this list. The names should be the ones corresponding to their magicDNS
# names, and not their actual hostnames. Used ONLY while generating the Traefik
# server list.
HEADSCALE_BLACKLISTED_NODES="these,servers,dont,host,traefik"
# Regex that specifies what domains (not URLs) should be included. This is
# processed first  when determining whether or not a domain will be included.
# Remove (or comment out) the option for no whitelisting.
#DOMAIN_WHITELIST='regex_goes_here'
# Same deal as the whitelist, but this excludes the domain names instead and
# happens after the whitelist. 
#DOMAIN_BLACKLIST='regex_goes_here'
# Before picking a domain, this will check whether a desired  middleware is
# present among the router that's discovered. If this option is commented out,
# then no filtering by traefik middleware will happen. Comma-seperated list. 
#TRAEFIK_MIDDLEWARE_WHITELIST="full_name_of_the_traefik_middleware@including_this_part_where_it_tells_you_where_its_sourced_from"

#
# The following two options are only used for the old magicDNS functionality I
# wanted to have back. For the `node.user.TLD` format tailscale used to have.
#

# This generates the old MagicDNS domain list using the information obtained
# from your Headscale instance (in the "node.user.tld" address format)
HEADSCALE_OLD_MAGICDNS=true

# Comma-separated list of TLDs that should be appended to your old magicDNS
# domains. This is a list because you can make multiple domains valid if you
# wanted to do so.
HEADSCALE_TLD=tailscale

# Path to the JSON output file that's going to be created that's loaded into
# headscale. Disable to write to extra_records.json in the current directory 
# instead.
#OUTPUT=/path/to/extra_records.json
